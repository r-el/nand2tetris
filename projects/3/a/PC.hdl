// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], inc, load, reset;
    OUT out[16];
    
    PARTS:
    // Increment the current value by 1
    Inc16 (in=currentValue, out=incrementedValue);
    
    // Select between the current value and the incremented value based on 'inc' signal
    Mux16 (a=currentValue, b=incrementedValue, sel=inc, out=incMuxOut);
    
    // Select between the previous result and the input value based on 'load' signal
    Mux16 (a=incMuxOut, b=in, sel=load, out=loadMuxOut);
    
    // Select between the previous result and 0 based on 'reset' signal
    Mux16 (a=loadMuxOut, b=false, sel=reset, out=resetMuxOut);
    
    // Store the final result in the register and output it
    Register (in=resetMuxOut, load=true, out=out, out=currentValue);
}
